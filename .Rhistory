# Extract the subset of rows of the dataframe where Ozone values are above 31 and temp values >90
data1 <- read.csv(file="D:\\Dropbox\\Sync Coding Computers\\Data Science Specialization\\R Programming\\Classwork\\hw1_data.csv")
ozrows <- data1[data1$Temp>90, 1:5, drop = FALSE]
oztemprows <- ozrows[ozrows$Ozone>31, 1:5]
solar <- oztemprows[ , "Solar.R"]
solar
# Extract the subset of rows of the dataframe where Ozone values are above 31 and temp values >90
data1 <- read.csv(file="D:\\Dropbox\\Sync Coding Computers\\Data Science Specialization\\R Programming\\Classwork\\hw1_data.csv")
ozrows <- data1[data1$Temp>90, 1:5, drop = FALSE]
oztemprows <- ozrows[ozrows$Ozone>31, 1:5]
solar <- oztemprows[ , "Solar.R"]
cleaned <- !is.na(solar)
cleaned
# Extract the subset of rows of the dataframe where Ozone values are above 31 and temp values >90
data1 <- read.csv(file="D:\\Dropbox\\Sync Coding Computers\\Data Science Specialization\\R Programming\\Classwork\\hw1_data.csv")
ozrows <- data1[data1$Temp>90, 1:5, drop = FALSE]
oztemprows <- ozrows[ozrows$Ozone>31, 1:5]
solar <- oztemprows[ , "Solar.R"]
cleaned <- solar(!is.na(solar))
# Extract the subset of rows of the dataframe where Ozone values are above 31 and temp values >90
data1 <- read.csv(file="D:\\Dropbox\\Sync Coding Computers\\Data Science Specialization\\R Programming\\Classwork\\hw1_data.csv")
ozrows <- data1[data1$Temp>90, 1:5, drop = FALSE]
oztemprows <- ozrows[ozrows$Ozone>31, 1:5]
solar <- oztemprows[ , "Solar.R"]
cleaned <- solar[!is.na(solar)]
cleaned
# Extract the subset of rows of the dataframe where Ozone values are above 31 and temp values >90
data1 <- read.csv(file="D:\\Dropbox\\Sync Coding Computers\\Data Science Specialization\\R Programming\\Classwork\\hw1_data.csv")
ozrows <- data1[data1$Temp>90, 1:5, drop = FALSE]
oztemprows <- ozrows[ozrows$Ozone>31, 1:5]
solar <- oztemprows[ , "Solar.R"]
cleaned <- solar[!is.na(solar)]
solarmean <- mean(solar)
solarmean
# Extract the subset of rows of the dataframe where Ozone values are above 31 and temp values >90
data1 <- read.csv(file="D:\\Dropbox\\Sync Coding Computers\\Data Science Specialization\\R Programming\\Classwork\\hw1_data.csv")
ozrows <- data1[data1$Temp>90, 1:5, drop = FALSE]
oztemprows <- ozrows[ozrows$Ozone>31, 1:5]
solar <- oztemprows[ , "Solar.R"]
cleaned <- solar[!is.na(solar)]
solarmean <- mean(cleaned)
solarmean
#What is the mean of Temp when the Month == 6
data1 <- read.csv(file="D:\\Dropbox\\Sync Coding Computers\\Data Science Specialization\\R Programming\\Classwork\\hw1_data.csv")
data2 <- data1[data1$Month == 6, 1:5]
data2
#What is the mean of Temp when the Month == 6
data1 <- read.csv(file="D:\\Dropbox\\Sync Coding Computers\\Data Science Specialization\\R Programming\\Classwork\\hw1_data.csv")
data2 <- data1[data1$Month == 6, 1:5]
temps <- data2[ , "Temp"]
temps
#What is the mean of Temp when the Month == 6
data1 <- read.csv(file="D:\\Dropbox\\Sync Coding Computers\\Data Science Specialization\\R Programming\\Classwork\\hw1_data.csv")
data2 <- data1[data1$Month == 6, 1:5]
temps <- data2[ , "Temp"]
av <- mean(temps)
av
# What is the maximum ozone value in the month of May
data1 <- read.csv(file="D:\\Dropbox\\Sync Coding Computers\\Data Science Specialization\\R Programming\\Classwork\\hw1_data.csv")
data2 <- data1[data1$Month == 5, 1:5]
cleaned <- data2[!is.na(data2)]
cleaned
# What is the maximum ozone value in the month of May
data1 <- read.csv(file="D:\\Dropbox\\Sync Coding Computers\\Data Science Specialization\\R Programming\\Classwork\\hw1_data.csv")
data2 <- data1[data1$Month == 5, 1:5]
ozone <- data1[ , "Ozone"]
cleaned <- ozone[!is.na(ozone)]
# What is the maximum ozone value in the month of May
data1 <- read.csv(file="D:\\Dropbox\\Sync Coding Computers\\Data Science Specialization\\R Programming\\Classwork\\hw1_data.csv")
data2 <- data1[data1$Month == 5, 1:5]
ozone <- data1[ , "Ozone"]
cleaned <- ozone[!is.na(ozone)]
cleaned
# What is the maximum ozone value in the month of May
data1 <- read.csv(file="D:\\Dropbox\\Sync Coding Computers\\Data Science Specialization\\R Programming\\Classwork\\hw1_data.csv")
data2 <- data1[data1$Month == 5, 1:5]
ozone <- data1[ , "Ozone"]
cleaned <- ozone[!is.na(ozone)]
avg = mean(cleaned)
mean
# What is the maximum ozone value in the month of May
data1 <- read.csv(file="D:\\Dropbox\\Sync Coding Computers\\Data Science Specialization\\R Programming\\Classwork\\hw1_data.csv")
data2 <- data1[data1$Month == 5, 1:5]
ozone <- data1[ , "Ozone"]
cleaned <- ozone[!is.na(ozone)]
avg = mean(cleaned)
avg
#What is the mean of Temp when the Month == 6
data1 <- read.csv(file="D:\\Dropbox\\Sync Coding Computers\\Data Science Specialization\\R Programming\\Classwork\\hw1_data.csv")
data2 <- data1[data1$Month == 6, 1:5]
temps <- data2[ , "Temp"]
av <- max(temps)
av
# What is the maximum ozone value in the month of May
data1 <- read.csv(file="D:\\Dropbox\\Sync Coding Computers\\Data Science Specialization\\R Programming\\Classwork\\hw1_data.csv")
data2 <- data1[data1$Month == 5, 1:5]
ozone <- data1[ , "Ozone"]
cleaned <- ozone[!is.na(ozone)]
avg = mean(cleaned)
avg
#What is the mean of Temp when the Month == 6
data1 <- read.csv(file="D:\\Dropbox\\Sync Coding Computers\\Data Science Specialization\\R Programming\\Classwork\\hw1_data.csv")
data2 <- data1[data1$Month == 6, 1:5]
temps <- data2[ , "Temp"]
av <- mean(temps)
av
# What is the maximum ozone value in the month of May
data1 <- read.csv(file="D:\\Dropbox\\Sync Coding Computers\\Data Science Specialization\\R Programming\\Classwork\\hw1_data.csv")
data2 <- data1[data1$Month == 5, 1:5]
ozone <- data1[ , "Ozone"]
cleaned <- ozone[!is.na(ozone)]
avg = max(cleaned)
avg
# What is the maximum ozone value in the month of May
data1 <- read.csv(file="D:\\Dropbox\\Sync Coding Computers\\Data Science Specialization\\R Programming\\Classwork\\hw1_data.csv")
data2 <- data1[data1$Month == 5, 1:5]
ozone <- data2[ , "Ozone"]
cleaned <- ozone[!is.na(ozone)]
avg = max(cleaned)
avg
View(ozdata)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("swirl")
source('~/.active-rstudio-document', echo=TRUE)
install_from_swiel("R Programming")
install_from_swirl("R Programming")
load("swirl")
install_from_swirl("R Programming")
library(swirl)
install_from_swirl("R Programming")
swirl()
5+7
x <- 5+7
x
y <- x-3
y
c(1.1,9,3.14)
z <-(1.1, 9 3.14)
z<- c(1.1,9,3.14)
?c
z
v2 <-c(z,555,z)
c(z, 555, z)
z *2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
bye()
swirl()
my_div <- z/my_sqrt
my_divc
my_div
c(1,2,3,4) + c(0 10)
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z *2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
list.files() args()
args(list.files())
args(list.files)
old.dir <- getwd()
dir.create("test_dir")
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
dir()
file.exisits(getwd())
file.exists(getwd())
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R")
file.rename("mytest.R"):("mytest2.R")
?file.rename
file.rename("mystest.R:mytest2.R")
args(file.rename)
file.rename("mytest.R","mystest2.R")
file.rename("mytest.R","mytest2.R")
file.name("mystest2.R","mytest2.R")
file.rename("mystest2.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path()
file.path("mytest3.R")
file.path('folder1','folder2')
?dir.create
dir.create(file.path('testdir2','testdir3'))
dir.create(file.path('testdir2','testdir3',recursive ==TRUE))
dir.create(file.path('testdir2','testdir3',recursive TRUE))
dir.create(file.path('testdir2','testdir3',TRUE))
dir.create(file.path('testdir2','testdir3',recursive = TRUE))
dir.create(file.path('testdir2','testdir3')recursive = TRUE))
dir.create(file.path('testdir2','testdir3'), recursive = TRUE))
dir.create(file.path('testdir2','testdir3'), recursive = TRUE)
setwd(old.dir)
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(1,10,0.5)
seq(1,10,by=0.5)
seq(0,10,by=0.5)
seq(5,10 length=30)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(1, length(myseq), by=1)
seq(1,length(my_seq), by=1)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0, 1, 2, times=10))
rep(c(0,1,2), times=10)
rep(c(0,1,2),each=10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect< 1
tf
num_vect >=6
my_char <- c("My","name","is")
my_char
paste(my_car, collapse = " ")
paste(my_char, collapse = " ")
c(mychar,"Haley")
c(my_char,"Haley")
my_char <- c(my_char,"Haley")
my_char <- "My name is"
my_name <- c(my_char,"Haley")
my_name
paste(my_char, collapse = " ")
my_name <- c(my_char, "Haley")
my_name <- c(my_char, "Wirl")
my_name <- c(my_char, "SWirl")
my_name
my_name <- c(my_char, "Swirl")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "SWirl")
my_char
paste(my_char, collapse = " ")
c(my_char, "Haley")
my_name <- c(my_char, "Haley")
my_name <- c(my_char, "Swirl")
bye()
swirl()
my_name <- c(my_char, " Asshole")
my_name
paste(my_name," ")
pate(my_name,collapse =" ")
paste(my_name, collapse = " ")
paste("Hello", "world!",sep=" ")
paste(c("X","Y","Z"), sep = "")
paste(c(1:3).c("X","Y","Z"), sep = "")
paste(c(1:3),c("X","Y","Z"), sep = "")
paste(LETTERS, 1:4, sep"-")
paste(LETTERS, 1:4, sep="-")
swirl()
x <- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <-sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data =NA
my_data == NA
sum(is.na(my_na))
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <-  x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x >0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x-c(2,10)
x[-c(2,10)]
vect <-c(foo = 11, bar =2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2)
names(vect2) <-c("foo","bar","norf")
vect2
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- c(1:20)
my_vector <-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix, my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_matrix)
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
?colnames
colnames(cnames)
colnames(cnames)
colnames(my_data) <- cnames
my_data
#Define a function like a variable
add2 <- function (x,y) { x+ y }
add2
add2(4,5)
above10 (100)
x[use]
above10 (12)
add2 <- function (x,y) {
x+ y
}
above10(12)
x[use]
above <- function (x,n){
use <- x > n
x[use]
}
above(x,12)
x <- 1:20
above(x,12)
above10 (x)
above10 (x)
use<- x > 10
above10(x)
above10 <- function (x){
use<- x > 10
x[use]
}
above10(x)
above(x)
above(x)
x[use]
columnmean <- function (y){
nc <- ncols (y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
columnmean <- function (y){
nc <- ncol (y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
means <- numeric(nc)
colum
for(i in 1:nc){
means[i] <- mean(y[,i], na.rm = removeNA)
}
columnmean(airquality)
means[i] <- mean(y[,i], na.rm = TRUE)
columnmean(airquality)
means[i] <- mean(y[,i], na.rm = removeNA)
means[i] <- mean(y[,i], na.rm = removeNA)
columnmean(airquality)
means[i] <- mean(y[,i], na.rm = TRUE)
columnmean(airquality)
columnmean(airquality)
add2 <- function (x,y) {
x+ y
}
columnmean(airquality)
nc <- ncol (y)
columnmean(airquality)
columnmean <- function (y, removeNA = TRUE){
nc <- ncol (y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i], na.rm = TRUE)
}
means
}
columnmean(airquality)
means[i] <- mean(y[,i], na.rm = removeNA = TRUE)
means[i] <- mean(y[,i], na.rm = removeNA )
columnmean(airquality)
columnmean(airquality,FALSE)
columnmean <- function (y, removeNA = TRUE){
nc <- ncol (y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i], na.rm = removeNA )
}
means
}
columnmean <- function (y, removeNA){
nc <- ncol (y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i], na.rm = removeNA )
}
means
}
columnmean <- function (y, removeNA = TRUE){
nc <- ncol (y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i], na.rm = removeNA )
}
means
}
columnmean(airquality,FALSE)
?formals
formals(add2())
#Define a function like a variable
add2 <- function (x,y) {
x+ y
}
formals(add2
1exit
formals(fun = sys.function(add2))
formals(add2)
pow <-function (x) {  #function x has access to var n because pow is a member of make.power's environment
x^n
}
make.power(3)
make.power <- function (n){
pow <-function (x) {  #function x has access to var n because pow is a member of make.power's environment
x^n
}
}
make.power <- function (n){
make.power(3)
eexit
)
make.power(3)
cube <- make.power(3)
cube (3)
#Lexical scoping demo - fn within a fn
make.power <- function (n){
pow <-function (x) {  #function x has access to var n because pow is a member of make.power's environment
x^n
}
}
cube <- make.power(3)
square <- make.power(2)
cube(3)
square(3)
setwd("D:/Dropbox/Sync Coding Computers/Data Science Specialization/R Programming/Classwork")
square
pollutantmean("specdata", "sulfate", 1:10)
source(pollutantmean.R)
complete <- function (directory, id = 1:332){
nobs <- list()
for (i in id){
# Was getting caught up here. i = the VALUE in id, not the index!!!
#From each file # of completely observed cases
fullset <- getfile(directory, i)
truecases <- complete.cases(fullset$sulfate,fullset$nitrate)
finalcases <- fullset$sulfate[truecases == TRUE]
nobs[[length(nobs) + 1]] <- length(finalcases)
}
return (data.frame(cbind(id,nobs)))
}
source(pollutantmean.R)
source('D:/Dropbox/Sync Coding Computers/Data Science Specialization/R Programming/Classwork/pollutantmean.R')
source('D:/Dropbox/Sync Coding Computers/Data Science Specialization/R Programming/Classwork/complete.R')
source('D:/Dropbox/Sync Coding Computers/Data Science Specialization/R Programming/Classwork/complete.R')
source(pollutantmean.R)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
source("complete.R")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
source('D:/Dropbox/Sync Coding Computers/Data Science Specialization/R Programming/Classwork/pollutantmean.R')
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
source('D:/Dropbox/Sync Coding Computers/Data Science Specialization/R Programming/Classwork/pollutantmean.R')
source('D:/Dropbox/Sync Coding Computers/Data Science Specialization/R Programming/Classwork/pollutantmean.R')
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
source('D:/Dropbox/Sync Coding Computers/Data Science Specialization/R Programming/Classwork/pollutantmean.R')
source('D:/Dropbox/Sync Coding Computers/Data Science Specialization/R Programming/Classwork/pollutantmean.R')
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
